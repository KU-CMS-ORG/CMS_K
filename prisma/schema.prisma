// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Faculty {
  AI
  AGRICULTURE
  ADMINISTRATION
}

enum UserStatus {
  ACTIVE
  INACTIVE
  CLOSED
}

enum Role {
  SUPERADMIN
  ADMIN
  USER
}

model tblUser {
  userId          String             @id @unique  @db.VarChar(36)
  firstName           String?             @db.VarChar(100)
  middleName           String?             @db.VarChar(100)
  lastName           String?             @db.VarChar(100)
  phone            String?             @unique @db.VarChar(10)
  countryCode     Int?                @db.Int
  role             Role             @default(USER)
  rollId             String?             @db.VarChar(15)
  faculty          Faculty?            
  userStatus      UserStatus           @default(ACTIVE) 
  credential tblCredential?
  tblTranHistory tblTranHistory[]
  tblPayment      tblPayment[]
}

model tblCredential {
  credId    Int      @id @default(autoincrement())
  user       tblUser @relation(fields: [userId], references: [userId])
  userId    String   @unique @db.VarChar(36)
  email      String   @unique @db.VarChar(100)
  password   String?   @db.VarChar(255) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum FoodCategory {
  meal
  lunch
  beverages
  others
}

model tblFood {
  foodId          Int                @id @default(autoincrement())
  foodName        String             @db.VarChar(255)
  foodCategory    FoodCategory       
  price            Decimal
  desc             String?             @db.VarChar(255)
  quantity         Int  @default(1)
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  tblMenu         tblMenu[]
  tblTranHistory tblTranHistory[]
}

enum days {
  Sunday
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
}

model tblMenu {
  menuId        Int      @id @default(autoincrement())
  food           tblFood @relation(fields: [foodId], references: [foodId])
  foodId        Int
  isAvailable   Boolean
  createdAtDay days
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([foodId])
}

model tblTranHistory {
  tranId        Int          @id @default(autoincrement())
  user           tblUser     @relation(fields: [userId], references: [userId])
  userId        String       @db.VarChar(255)
  food           tblFood     @relation(fields: [foodId], references: [foodId])
  foodId        Int
  tranDate      DateTime     @default(now())
  checkoutPrice Decimal
  tranDesc      String       @db.VarChar(255)
  quantity       Int
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  tblPayment    tblPayment?

  @@index([userId])
  @@index([foodId])
}

model tblPayment {
  paymentId     Int              @id @default(autoincrement())
  user           tblUser         @relation(fields: [userId], references: [userId])
  userId        String           @db.VarChar(255)
  tran           tblTranHistory @relation(fields: [tranId], references: [tranId])
  tranId        Int              @unique
  tranDate      DateTime         @default(now())
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  paymentMethod String           @db.VarChar(255)
  paidStatus    String           @db.VarChar(255)

  @@index([userId])
}
