// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Faculty {
  AI
  AGRICULTURE
  ADMINISTRATION
}

enum UserStatus {
  ACTIVE
  INACTIVE
  CLOSED
}

enum Role {
  SUPERADMIN
  ADMIN
  USER
}

model tblUser {
  userId          String             @id @unique  @db.VarChar(36)
  firstName           String?             @db.VarChar(100)
  middleName           String?             @db.VarChar(100)
  lastName           String?             @db.VarChar(100)
  phone            String?             @unique @db.VarChar(10)
  countryCode     String?                @db.VarChar(5)
  countryIsoCode String?            @db.VarChar(5)
  role             Role             @default(USER)
  rollId             String?             @db.VarChar(15)
  dateOfBirth  DateTime? @db.Date
  faculty          Faculty?            
  userStatus      UserStatus           @default(ACTIVE) 
  credential tblCredential?
  tranHistory tblTranHistory[]
  payment      tblPayment[]
}

model tblCredential {
  credId    Int      @id @default(autoincrement())
  user       tblUser @relation(fields: [userId], references: [userId])
  userId    String   @unique @db.VarChar(36)
  email      String   @unique @db.VarChar(100)
  password   String?   @db.VarChar(255) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum FoodCategory {
  MEAL
  LUNCH
  BEVERAGE
  OTHER
}

model tblFood {
  foodId          Int                @id @default(autoincrement())
  foodName        String             @db.VarChar(255)
  foodCategory    FoodCategory       
  price            Decimal
  desc             String?             @db.VarChar(255)
  quantity         Int  @default(1)
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  menu         tblFoodOnMenu[]
  tranHistory tblTranHistory[]
}

enum Days {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}

model tblMenu {
  menuId        Int      @id @default(autoincrement())
  isAvailable   Boolean
  createdAtDay Days
  menuFor DateTime @unique @db.Date
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  foods tblFoodOnMenu[]
}

model tblFoodOnMenu {
  menu tblMenu @relation(fields: [menuId], references: [menuId])
  menuId Int
  food tblFood @relation(fields: [foodId], references: [foodId])
  foodId Int
  @@id([foodId, menuId])
  @@index([menuId])
  @@index([foodId])
}

enum TranStatus {
  CANCELLED
  ORDERED
  SERVED
}
model tblTranHistory {
  tranId        Int          @id @default(autoincrement())
  user           tblUser     @relation(fields: [userId], references: [userId])
  userId        String       @db.VarChar(255)
  food           tblFood     @relation(fields: [foodId], references: [foodId])
  foodId        Int
  tranDate      DateTime     @default(now())
  checkoutPrice Decimal
  tranDesc      String?       @db.VarChar(255)
  quantity       Int
  tranStatus TranStatus @default(ORDERED)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  payment    tblPayment?

  @@index([userId])
  @@index([foodId])
}

enum PaymentMethod {
  CASH
  ESEWA
}

enum PaymentStatus {
  PAID
  PENDING
}
model tblPayment {
  paymentId     Int              @id @default(autoincrement())
  user           tblUser         @relation(fields: [userId], references: [userId])
  userId        String           @db.VarChar(255)
  tran           tblTranHistory @relation(fields: [tranId], references: [tranId])
  tranId        Int              @unique
  tranDate      DateTime         @default(now())
  referenceId   String?         @db.VarChar(255)
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  paymentMethod PaymentMethod?   
  paymentStatus    PaymentStatus       @default(PENDING)
  @@index([userId])
}
